{"name": "test_SelectCars[chrome-Toyota-Toyota Cars234]", "status": "failed", "statusDetails": {"message": "AssertionError: Not on the correct page,title is not matching\nassert 'Toyota Cars' == 'Toyota Cars234'\n  - Toyota Cars234\n  ?            ---\n  + Toyota Cars", "trace": "self = <test_carwale.Test_Carwale object at 0x0000017003AE6148>\ncarModel = 'Toyota', carTitle = 'Toyota Cars234'\n\n    @pytest.mark.parametrize(\"carModel,carTitle\", dp.get_data(\"NewCarsData\"))\n    def test_SelectCars(self, carModel, carTitle):\n        log.logger.info(\"******************Inside the Select car Test**********************\")\n        home = HomePage(self.driver)\n        car = CarBase(self.driver)\n        print((\"The car brand is :\" + carModel).encode(\"utf8\"))\n        if carModel == \"BMW\":\n            home.gotoNewCars().selectBMW()\n            actual_title = car.getCarTitle()\n            print((\"The actual title is: \" + actual_title).encode(\"utf8\"))\n            assert actual_title == carTitle, \"Not on the correct page,title is not matching\"\n            car.getCarNameandPrice()\n        elif carModel == \"Hyundayi\":\n            home.gotoNewCars().selectHyundayi()\n            actual_title = car.getCarTitle()\n            print((\"The actual title is: \" + actual_title).encode(\"utf8\"))\n            assert actual_title == carTitle, \"Not on the correct page,title is not matching\"\n            car.getCarNameandPrice()\n        elif carModel == \"Toyota\":\n            home.gotoNewCars().selectToyota()\n            actual_title = car.getCarTitle()\n            print((\"The actual title is: \" + actual_title).encode(\"utf8\"))\n>           assert actual_title == carTitle, \"Not on the correct page,title is not matching\"\nE           AssertionError: Not on the correct page,title is not matching\nE           assert 'Toyota Cars' == 'Toyota Cars234'\nE             - Toyota Cars234\nE             ?            ---\nE             + Toyota Cars\n\ntest_carwale.py:71: AssertionError"}, "attachments": [{"name": "log", "source": "c7db416e-1a8e-4f4c-82c9-9f347c91d663-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "get_browser", "value": "'chrome'"}, {"name": "carModel", "value": "'Toyota'"}, {"name": "carTitle", "value": "'Toyota Cars234'"}], "start": 1634194173560, "stop": 1634194176284, "uuid": "61eeb9ca-c239-4841-a9ae-deff14bc5f30", "historyId": "a8683bdc1bafa56b0ad5b8efeb8c27de", "testCaseId": "4243ddb3bdbbdaed66d16c96d66f09ac", "fullName": "test_carwale.Test_Carwale#test_SelectCars", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('log_on_failure', 'get_browser')"}, {"name": "suite", "value": "test_carwale"}, {"name": "subSuite", "value": "Test_Carwale"}, {"name": "host", "value": "DESKTOP-I23KGD9"}, {"name": "thread", "value": "14244-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_carwale"}]}